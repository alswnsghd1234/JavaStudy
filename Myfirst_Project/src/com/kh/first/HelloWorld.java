package com.kh.first; // 패키지 선언부 : 현재 클래스의 위치를 알려주는 부분(패키지의 위치)

//클래스 풀네임: com.kh.first.HelloWorld 패키지이름은 소문자!!)
public class HelloWorld { // HelloWorld 영역의 시작
	
	/*
	 한 패키지 안에 여러 클래스 또는 패키지들이 존재 가능하다.
	 단, 동일한 이름의 패키지나 클래스는 존재할 수 없다.
	 하지만 다른 패키지 안에서는 존재가 가능하다.
	 ex)com.kh.first.HelloWorld 랑 com.kh.second.HelloWorld는 생성 가능
	 
	 기본패키지에 클래스를 만드는것을 권장하지 않는 이유(기본패키지에 있는 클래스 = 패키지없이 클래스만 존재하는 것이기 때문에 관리하기 좋지않다.)
	 
	 권장사항!
	 1. 패키지는 적어도 세단계 이상 만드는것을 권장한다.
	 ex) com.회사명.프로젝트명 또는 팀명 (com.kh.today)
	 
	 2. 패키지의 두번째 레벨까지는 도메인의 역순으로 써준다.
	 	도메인 주소는 고유하기 때문에 중복을 방지할 수 있다.
	 	도메인 주소는 어느 회사인지 바로 알아볼 수 있기 때문이다.
	 	
	 */
	
	//main 메소드 : 프로그램의 시작점. 프로그램당 최소 1개는 가지고 있어야 한다.
	public static void main(String args[]) { //main 메소드 영역의 시작
		//실행하고자 하는 내용(코드)
		System.out.println("안녕하세요.");
		printHi();
		
	}
	
	/*
	 Method : 사전적으로 기능을 의미한다.
	 하나의 기능 단위
	 한개의 클래스에 여러 메소드가 존재 가능합니다.
	 메소드의 이름은 중복된다.(규칙이 있지만 객체 시간에 다룰것입니다.)
	 
	 메소드는 main과 일반 메소드로 나뉜다.
	 메소드를 실행하는것을 호출이라고 한다.
	 일반 메소드같은 경우에는 스스로 실행이 되지 않는다.
	 다른 메소드에서 호출 가능하지만 결국 메인 메소드에서 호출해야 실행
	 */
	
	public static void printHi() {
		System.out.println("안녕하세요 저는 민준홍입니다.");
	}
	
	
}//HelloWolrd 클래스 영역의 끝
