

package com.kh.chap01.abstraction.run;

import com.kh.chap01.abstraction.model.vo.Student.Student;

public class run {

	/*
	 * 객체지향 언어: "객체"를 지향하는 언어로 "객체중심"으로 돌아간다.
	 * 
	 * 2. 객체: 사전적 의미로는 현실세계에 독립적으로 존재하는 (목적이 있고, 의미가 있는)
	 * 			모든것들을 의미한다.(무형,유형,사물,개념...)
	 * 
	 * 3. 객체지향 프로그래밍: 현실 세계에서 독립적으로 존재하는 것들간의 상호작용(행위)을 코드로 구현하는 과정.
	 * 
	 * 4. 구현하고자 하는 프로그램 상의 객체를 만들기 위해서
	 * 	클래스라는 틀을 만들어야합니다.
	 * 	클래스란? 각 객체들의 속성(정보, 행위) 등을 담아낸 틀 과 같은 존재.
	 * 	클래스는 어떻게 만드는가? -> 1단계로 추상화 과정을 거친 후에 2단계로 캡슐화를 해준다.
	 * 
	 * 5. 추상화 과정
	 *  1) 내가 구현하고자 하는 프로그램에서 필요한 객체들을 생각해볼 것.
	 *  	예)학생관리 프로그램 -> "학생" 이라는 객체가 필요하다. ex)아이유,송강,박민영....등등...
	 *  2)그 객체들이 가지고 있는 공통적인 속성, 기능들을 모두 추출할 것
	 *  	예)나이,이름,성별,키,성적,학년,번호....
	 *  3.추출한 속성들을 내가 구현할 프로그램에 기준에 맞춰서 불필요한 속성들을 제거한다.
	 *  	예)발사이즈,자가용 유무,형제자매....
	 *  4)최종적으로 추려진 속성들을 가지고 클래스라는 틀을 만든다.
	 *  	어떤 자료형으로 어떤 속성을 만들지 생각해본다.
	 *  
	 *  위에서 생각해본것들을 가지고 프로그래밍을 한다.
	 *  1) 변수마느로 프로그래밍을 한다면?
	 *  	-> 변수는 하나의 값만 보관이 가능하기 때문에
	 *  	아이유 라는 객체를 만들기 위해서
	 *  	String name = "아이유"; int age =20; char gender='F';
	 * 		 송강 라는 객체를 만들기 위해서
	 *  	String name = "송강"; int age =22; char gender='M';
	 * 
	 *  2) "배열"로 프로그래밍을 한다면?
	 *  -> 배열은 같은 자료형끼리 묶인 형태
	 *  예) 배열로 학생 객체 만들어보기
	 *  String[] names={"아이유","송강","송강호","박민영"};
	 *  int[] ages = {20,21,22,30};
	 *  ....
	 *  변수만 사용해서 하는것보다는 나아보인다. 하지만 만약 송강호가 전학을 갔다면??
	 *  index[2] 에 있는 정보들을 정확하게 지워줘야만 한다. 아니면 값이 꼬여버리기 때문
	 *  	만약 누군가가 전학을 온다면 배열을 복사해서 더 크게 만들어줘야하는 번거로움이 있다. 그 과정에서 뒤틀린 데이터는
	 *  	복구하기 쉽지 않다.
	 *  
	 *  3)그래서 나온 개념이 "구조체"라는 개념이다.
	 *  구조체 : 한번에 여러개의 자료형을 보관할 수 있는 형태
	 *  	String, int, double, char 다 보관이 가능하다.
	 *  s
	 *  자바에서 클래스는 구조체 + 메소드(기능) 을 의미한다.
	 *  여러개의 자료형과 메소드(기능)들을 모아 만든 툴이라고 생각하면 된다.
	 *  객체의 속성을 담아내는 틀 VO(Value Object) 라고 부른다.
	 * 
	 * 
	 * */
	public void main(String[] args) {
		
		//Student 클래스 생성해봅시다!!
		
		// 학생객체를 만들거야 만들어서 사용할래
		
		Student s = new Student(); //Student클래스 틀로 학생 객체를 생성한 것
		s.name = "나라";
		
	}
}
